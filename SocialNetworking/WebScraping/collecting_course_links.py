import csv
import time
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException, NoSuchElementException, ElementClickInterceptedException
from webdriver_manager.chrome import ChromeDriverManager

# C√°c category c·∫ßn duy·ªát
categories = [
    'arts-and-humanities',
    'business',
    'computer-science',
    'data-science',
    'health',
    'information-technology',
    'language-learning',
    'math-and-logic',
    'personal-development',
    'physical-science-and-engineering',
    'social-sciences'
]

# Thi·∫øt l·∫≠p Chrome options
options = Options()
options.add_argument("--headless")  # b·ªè n·∫øu mu·ªën xem tr√¨nh duy·ªát
options.add_argument("--disable-gpu")

driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=options)

all_hrefs = set()  # d√πng set ƒë·ªÉ lo·∫°i b·ªè tr√πng l·∫∑p ngay t·ª´ ƒë·∫ßu

try:
    wait = WebDriverWait(driver, 10)

    for category in categories:
        url = f"https://www.coursera.org/browse/{category}"
        print(f"\nƒêang x·ª≠ l√Ω category: {category}")
        driver.get(url)

        while True:
            # --- Ch·ªù ph·∫ßn searchResults ---
            try:
                search_results = wait.until(
                    EC.presence_of_element_located((By.ID, "searchResults"))
                )
            except TimeoutException:
                print("‚ùå Kh√¥ng t√¨m th·∫•y searchResults, b·ªè qua category n√†y.")
                break

            # L·∫•y ul v√† c√°c li
            ul = search_results.find_element(By.TAG_NAME, "ul")
            lis = ul.find_elements(By.TAG_NAME, "li")

            for li in lis:
                try:
                    a_tag = li.find_element(By.TAG_NAME, "a")
                    href = a_tag.get_attribute("href")
                    if href and href.startswith("https://www.coursera.org/learn"):
                        all_hrefs.add(href)
                except NoSuchElementException:
                    pass

            print(f"‚úÖ Category {category} ƒë√£ thu th·∫≠p {len(all_hrefs)} link (t·∫°m th·ªùi).")

            # --- T√¨m v√† click n√∫t Next ---
            try:
                next_button = wait.until(
                    EC.element_to_be_clickable((By.CSS_SELECTOR, 'button[aria-label="Go to next page"]'))
                )
                driver.execute_script("arguments[0].click();", next_button)

                # Ch·ªù trang m·ªõi load (ul c≈© m·∫•t ƒëi)
                wait.until(EC.staleness_of(ul))

                time.sleep(2)

                print('ƒê√£ qua trang m·ªõi!')
            except (TimeoutException, NoSuchElementException, ElementClickInterceptedException):
                print(f"‚èπ H·∫øt trang trong category {category}.")
                break

        file_name = f"{category}_courses.csv"
        with open(file_name, "w", newline="", encoding="utf-8") as f:
            writer = csv.writer(f)
            for link in sorted(all_hrefs):
                writer.writerow([link])

        print(f"‚úÖ ƒê√£ l∆∞u {len(all_hrefs)} link kh√≥a h·ªçc v√†o {file_name}")

        all_hrefs = set()

finally:
    driver.quit()

# --- L∆∞u ra CSV ---
# with open("course_links.csv", "w", newline="", encoding="utf-8") as f:
#     writer = csv.writer(f)
#     writer.writerow(["course_link"])
#     for link in sorted(all_hrefs):
#         writer.writerow([link])
#
# print(f"\nüéâ Ho√†n th√†nh! ƒê√£ l∆∞u {len(all_hrefs)} link kh√≥a h·ªçc v√†o file course_links.csv")